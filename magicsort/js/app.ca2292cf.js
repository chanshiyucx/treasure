(function(t){function n(n){for(var r,o,a=n[0],u=n[1],c=n[2],h=0,f=[];h<a.length;h++)o=a[h],s[o]&&f.push(s[o][0]),s[o]=0;for(r in u)Object.prototype.hasOwnProperty.call(u,r)&&(t[r]=u[r]);l&&l(n);while(f.length)f.shift()();return i.push.apply(i,c||[]),e()}function e(){for(var t,n=0;n<i.length;n++){for(var e=i[n],r=!0,a=1;a<e.length;a++){var u=e[a];0!==s[u]&&(r=!1)}r&&(i.splice(n--,1),t=o(o.s=e[0]))}return t}var r={},s={app:0},i=[];function o(n){if(r[n])return r[n].exports;var e=r[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,o),e.l=!0,e.exports}o.m=t,o.c=r,o.d=function(t,n,e){o.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},o.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,n){if(1&n&&(t=o(t)),8&n)return t;if(4&n&&"object"===typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(o.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)o.d(e,r,function(n){return t[n]}.bind(null,r));return e},o.n=function(t){var n=t&&t.__esModule?function(){return t["default"]}:function(){return t};return o.d(n,"a",n),n},o.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},o.p="/treasure/magicsort/";var a=window["webpackJsonp"]=window["webpackJsonp"]||[],u=a.push.bind(a);a.push=n,a=a.slice();for(var c=0;c<a.length;c++)n(a[c]);var l=u;i.push([0,"chunk-vendors"]),e()})({0:function(t,n,e){t.exports=e("56d7")},"0368":function(t,n,e){},"0568":function(t,n,e){"use strict";var r=e("c36f"),s=e.n(r);s.a},"2ae3":function(t,n){t.exports="## 经典冒泡算法\r\n\r\n经典冒泡算法：通过双层循环实现排序，外层循环表示当前是第几轮排序，内层循环表示当前轮的第几次排序，通过两两比较交换位置完成排序。\r\n\r\n```javascript\r\nfunction bubbleSort(nums) {\r\n  const len = nums.length\r\n  for (let i = 0; i < len; i++) {\r\n    for (let j = 0; j < len - 1 - i; j++) {\r\n      if (nums[j] > nums[j + 1]) {\r\n        ;[nums[j], nums[j + 1]] = [nums[j + 1], nums[j]] // 交换位置\r\n      }\r\n    }\r\n  }\r\n  return nums\r\n}\r\n```\r\n\r\n## 改进冒泡算法\r\n\r\n改进冒泡算法：设置一标志性变量 pos，用于记录每轮排序中最后一次进行交换的位置。由于 pos 位置之后的记录均已交换到位，故在进行下一轮排序时只要扫描到 pos 位置即可。\r\n\r\n```javascript\r\nfunction bubbleSort(nums) {\r\n  const len = nums.length\r\n  let i = len - 1\r\n  while (i > 0) {\r\n    let pos = 0\r\n    for (let j = 0; j < i; j++) {\r\n      if (nums[j] > nums[j + 1]) {\r\n        pos = j // 记录交换時的位置\r\n        ;[nums[j], nums[j + 1]] = [nums[j + 1], nums[j]] // 交换位置\r\n      }\r\n    }\r\n    i = pos\r\n  }\r\n  return nums\r\n}\r\n```\r\n\r\n## 终极冒泡算法\r\n\r\n终极冒泡算法：传统冒泡排序中每一轮排序操作只能找到一个最大值或最小值，可以在每趟排序中进行正向和反向两遍冒泡方法一次得到两个最终值（最大者和最小者），从而使排序轮数几乎减少了一半。\r\n\r\n```javascript\r\nfunction bubbleSort(nums) {\r\n  let low = 0\r\n  let high = nums.length - 1\r\n  let i\r\n  while (low < high) {\r\n    // 正向排序，找出最大值\r\n    for (i = low; i < high; ++i) {\r\n      if (nums[i] > nums[i + 1]) {\r\n        ;[nums[i], nums[i + 1]] = [nums[i + 1], nums[i]] // 交换位置\r\n      }\r\n    }\r\n    --high // 前移一位\r\n\r\n    // 反向排序，找出最小值\r\n    for (i = high; i > low; --i) {\r\n      if (nums[i] < nums[i - 1]) {\r\n        ;[nums[i], nums[i - 1]] = [nums[i - 1], nums[i]] // 交换位置\r\n      }\r\n    }\r\n    ++low // 后移一位\r\n  }\r\n  return nums\r\n}\r\n```\r\n"},"2ce6":function(t,n){t.exports="## 经典插入算法\r\n\r\n经典选择算法：将数列分为有序区和无序区两部分，在每轮循环中从无序区选择一个最小值并入有序区，新增一位有序区同时减少一位无序区，n - 1 轮排序后全部变为有序区，从而完成排序。\r\n\r\n```javascript\r\nfunction insertionSort(nums) {\r\n  const len = nums.length\r\n  for (let i = 1; i < len; i++) {\r\n    let k = nums[i]\r\n    let j = i - 1\r\n    while (j >= 0 && nums[j].num > k.num) {\r\n      nums[j + 1] = num[j]\r\n      j--\r\n    }\r\n    nums[j + 1] = k\r\n  }\r\n  return nums\r\n}\r\n```\r\n\r\n## 二分插入算法\r\n\r\n二分插入算法：查找插入位置时使用二分查找的方式，在插入值之前，先在有序区中找到待插入值需要比较的左边界，在数据长度较大时，可以有效减少每轮排序中的查找插入位置的次数。\r\n\r\n```javascript\r\nfunction insertionSort(nums) {\r\n  const len = nums.length\r\n  for (let i = 1; i < len; i++) {\r\n    let k = nums[i]\r\n    let left = 0\r\n    let right = i - 1\r\n    while (left <= right) {\r\n      let middle = ~~((left + right) / 2)\r\n      if (k < nums[middle]) {\r\n        right = middle - 1\r\n      } else {\r\n        left = middle + 1\r\n      }\r\n    }\r\n    for (let j = i - 1; j >= left; j--) {\r\n      nums[j + 1] = nums[j]\r\n    }\r\n    nums[left] = k\r\n  }\r\n  return nums\r\n}\r\n```\r\n"},"355f":function(t,n){t.exports="## 经典选择算法\r\n\r\n经典选择算法：将数列分为有序区和无序区两部分，在每轮循环中从无序区选择一个最小值并入有序区，新增一位有序区同时减少一位无序区，n - 1 轮排序后全部变为有序区，从而完成排序。\r\n\r\n```javascript\r\nfunction selectionSort(nums) {\r\n  const len = nums.length\r\n  let min = 0\r\n  for (let i = 0; i < len - 1; i++) {\r\n    min = i\r\n    for (let j = i + 1; j < len; j++) {\r\n      if (nums[min] > nums[j]) {\r\n        min = j // 保存最小值的索引\r\n      }\r\n    }\r\n    ;[nums[i], nums[min]] = [nums[min], nums[i]] // 交换位置\r\n  }\r\n  return nums\r\n}\r\n```\r\n"},"51a4":function(t,n,e){},"56d7":function(t,n,e){"use strict";e.r(n);var r={};e.r(r),e.d(r,"bubbleSort1",function(){return Q}),e.d(r,"bubbleSort2",function(){return U}),e.d(r,"bubbleSort3",function(){return W}),e.d(r,"selectionSort",function(){return Y}),e.d(r,"insertionSort1",function(){return tt});var s=e("2ca9"),i=e("ea31"),o=(e("cadf"),e("551c"),e("097d"),e("2b0e")),a=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{attrs:{id:"app"}},[e("a",{staticClass:"github-corner",attrs:{href:"https://github.com/chanshiyucx/magic-sort",target:"_blank","aria-label":"View source on Github"}},[e("svg",{attrs:{width:"80",height:"80",viewBox:"0 0 250 250","aria-hidden":"true"}},[e("path",{attrs:{d:"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z",fill:"rgba(0, 0, 0, .6)"}}),e("path",{staticClass:"octo-arm",staticStyle:{"transform-origin":"130px 106px"},attrs:{d:"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2",fill:"#aaa"}}),e("path",{staticClass:"octo-body",attrs:{d:"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z",fill:"#aaa"}})])]),e("Tabs",{model:{value:t.curTab,callback:function(n){t.curTab=n},expression:"curTab"}},t._l(t.tabs,function(n){return e("TabPane",{key:n.type,attrs:{name:n.type,label:n.label}},[e("Pane",{attrs:{type:n.type,curTab:t.curTab}})],1)}),1),e("Footer")],1)},u=[],c=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"pane"},[e("Post",{attrs:{type:t.type}}),e("div",{staticClass:"box"},[e("div",{staticClass:"box-left"},[e("div",{staticClass:"info"},[e("p",[t._v("\n          当前排序算法： "),e("span",{staticClass:"name"},[t._v(t._s(t.curSortTab))])]),e("p",[t._v("输入值：[20, 72, 31, 83, 9, 44, 14, 58, 51, 66, 38, 99, 40, 25, 88, 35]")]),e("p",[t._v("输出值：[9, 14, 20, 25, 31, 35, 38, 40, 44, 51, 58, 66, 72, 83, 88, 99]")]),e("p",[t._v("千次排序总时长："+t._s(t.total)+" ms 【数值可能有浮动，仅供参考】")]),e("div",{staticClass:"btn-group"},[e("button",{on:{click:t.toggleAnime}},[t._v(t._s(this.timer?"暂停":"开始"))]),e("button",{on:{click:t.init}},[t._v("重置")]),e("button",{on:{click:t.switchSpeed}},[t._v(t._s(t.speedTxt))])])]),e("div",{staticClass:"chart"},t._l(t.nums,function(n){return e("div",{key:n.key,style:{height:3*n.num+"px",transform:t.getStatus(n.key).transform,background:t.getStatus(n.key).color,transitionDuration:t.duration+"s"}},[e("span",[t._v(t._s(n.num))])])}),0)]),e("div",{staticClass:"marked"},[e("Tabs",{model:{value:t.curSortTab,callback:function(n){t.curSortTab=n},expression:"curSortTab"}},t._l(t.section,function(n){return e("TabPane",{key:n.title,attrs:{name:n.title,label:n.title}},[e("div",{domProps:{innerHTML:t._s(t.getHtml(n.desc))}}),e("div",{staticClass:"md-pane",attrs:{id:n.title},domProps:{innerHTML:t._s(t.getHtml(n.code))}})])}),1),e("div",{staticClass:"code-btn-box"},[e("a",{staticClass:"dark-btn",on:{click:function(n){t.scrollTo("top")}}},[e("i",{staticClass:"icon"},[t._v("")])]),e("a",{staticClass:"dark-btn",on:{click:function(n){t.scrollTo("bottom")}}},[e("i",{staticClass:"icon"},[t._v("")])])])],1)])],1)},l=[],h=(e("6762"),e("cebc")),f=(e("ac6a"),e("55dd"),e("7f7f"),e("7514"),e("4917"),e("28a5"),e("f499")),p=e.n(f),m=e("0e54"),v=e.n(m),b=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"post"},["bubble"===t.type?e("BubbleSort"):t._e(),"selection"===t.type?e("SelectionSort"):t._e(),"insertion"===t.type?e("InsertionSort"):t._e()],1)},d=[],g=function(){var t=this,n=t.$createElement;t._self._c;return t._m(0)},S=[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"post"},[e("div",[e("p",[e("span",{staticClass:"begin"},[t._v("冒泡排序")]),t._v("\n      是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。\n    ")]),e("span",[t._v("冒泡排序算法的运作如下：")]),e("ul",[e("li",[t._v("比较相邻的元素。如果第一个比第二个大，就交换他们两个。")]),e("li",[t._v("\n        对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。\n      ")]),e("li",[t._v("针对所有的元素重复以上的步骤，除了最后一个。")]),e("li",[t._v("持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。")])]),e("p",[t._v("\n      冒泡排序平均时间复杂度 O(n^2)，在最好情况下，即一次排完時复杂度为 O(n)，在最坏情况下复杂度为\n      O(n^2)。\n    ")])])])}],_={name:"BubbleSort"},y=_,T=e("2877"),j=Object(T["a"])(y,g,S,!1,null,null,null);j.options.__file="bubbleSort.vue";var C=j.exports,E=function(){var t=this,n=t.$createElement;t._self._c;return t._m(0)},w=[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"post"},[e("div",[e("p",[e("span",{staticClass:"begin"},[t._v("选择排序")]),t._v("\n      是一种简单直观的排序算法。首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。\n    ")]),e("span",[t._v("选择排序算法的运作如下：")]),e("ul",[e("li",[t._v("初始状态：无序区为 R[1..n]，有序区为空。")]),e("li",[t._v("\n        第 i 轮排序开始时，当前有序区和无序区分别为 R[1..i-1] 和\n        R[i..n]。然后从当前无序区中选出最小值，将它与无序区的第一个值交换，使得新增一位有序区和减少一位无序区。\n      ")]),e("li",[t._v("n-1 轮排序结束，数组全部变为有序区，从而完成排序。")])]),e("p",[t._v("\n      选择排序的主要优点与数据移动有关。如果某个元素位于正确的最终位置上，则它不会被移动。选择排序每次交换一对元素，它们当中至少有一个将被移到其最终位置上，因此对\n      n 个元素的表进行排序总共进行至多 n-1\n      次交换。在所有的完全依靠交换去移动元素的排序方法中，选择排序属于非常好的一种。\n    ")]),e("p",[t._v("选择排序平均时间复杂度稳定在 O(n^2)。")])])])}],k={name:"SelectionSort"},x=k,O=Object(T["a"])(x,E,w,!1,null,null,null);O.options.__file="selectionSort.vue";var P=O.exports,$=function(){var t=this,n=t.$createElement;t._self._c;return t._m(0)},M=[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"post"},[e("div",[e("p",[e("span",{staticClass:"begin"},[t._v("插入排序")]),t._v("\n      是一种简单的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，\n      通常采用 in-place\n      排序，因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。\n    ")]),e("span",[t._v("插入排序算法的运作如下：")]),e("ul",[e("li",[t._v("从第一个元素开始，该元素可以认为已经被排序。")]),e("li",[t._v("\n        取出下一个元素，在已经排序的元素序列中从后向前扫描，如果该元素大于新元素，将该元素移到下一位置。\n      ")]),e("li",[t._v("重复步骤 2，直到找到已排序的元素小于或者等于新元素的位置，将新元素插入到该位置后。")]),e("li",[t._v("重复步骤 2~3，直到完成排序。")])]),e("p",[t._v("插入排序平均时间复杂度 O(n^2)，在最好情况下复杂度为 O(n)，在最坏情况下复杂度为 O(n^2)。")])])])}],D={name:"InsertionSort"},L=D,A=Object(T["a"])(L,$,M,!1,null,null,null);A.options.__file="insertionSort.vue";var B=A.exports,H={name:"Post",components:{BubbleSort:C,SelectionSort:P,InsertionSort:B},props:["type"]},N=H,I=(e("0568"),Object(T["a"])(N,b,d,!1,null,"6bccfaa2",null));I.options.__file="index.vue";var R=I.exports,F=e("8c7a"),J=e.n(F),Z=(e("c0f1"),e("cb55"),e("8009"),e("416b"),J.a),G=e("2ae3"),V=e.n(G),X=e("355f"),q=e.n(X),z=e("2ce6"),K=e.n(z),Q=function(t){for(var n=t.length,e=0;e<n;e++)for(var r=0;r<n-1-e;r++)if(t[r].num>t[r+1].num){var s=[t[r+1],t[r]];t[r]=s[0],t[r+1]=s[1]}return t},U=function(t){var n=t.length,e=n-1;while(e>0){for(var r=0,s=0;s<e;s++)if(t[s].num>t[s+1].num){r=s;var i=[t[s+1],t[s]];t[s]=i[0],t[s+1]=i[1]}e=r}return t},W=function(t){var n,e=0,r=t.length-1;while(e<r){for(n=e;n<r;++n)if(t[n].num>t[n+1].num){var s=[t[n+1],t[n]];t[n]=s[0],t[n+1]=s[1]}for(--r,n=r;n>e;--n)if(t[n].num<t[n-1].num){var i=[t[n-1],t[n]];t[n]=i[0],t[n-1]=i[1]}++e}return t},Y=function(t){for(var n=t.length,e=0,r=0;r<n-1;r++){e=r;for(var s=r+1;s<n;s++)t[e]>t[s]&&(e=s);var i=[t[e],t[r]];t[r]=i[0],t[e]=i[1]}return t},tt=function(t){for(var n=t.length,e=0,r=0;r<n-1;r++){e=r;for(var s=r+1;s<n;s++)t[e]>t[s]&&(e=s);var i=[t[e],t[r]];t[r]=i[0],t[e]=i[1]}return t},nt=new v.a.Renderer;v.a.setOptions({renderer:nt,highlight:function(t,n){return Z.highlight(t,Z.languages[n||"markup"],n)}});var et={bubble:V.a,selection:q.a,insertion:K.a,merge:void 0},rt={bubble:[{name:"经典冒泡算法",sortType:"bubbleSort1"},{name:"改进冒泡算法",sortType:"bubbleSort2"},{name:"终极冒泡算法",sortType:"bubbleSort3"}],selection:[{name:"经典选择算法",sortType:"selectionSort"}],insertion:[{name:"经典插入算法",sortType:"insertionSort1"},{name:"二分插入算法",sortType:"insertionSort2"}],merge:[{name:"经典归并算法",sortType:"mergeSort"}]},st=[20,72,31,83,9,44,14,58,51,66,38,99,40,25,88,35],it=st.map(function(t,n){return{num:t,key:"".concat(t,"_").concat(n)}}),ot=function(t){return JSON.parse(p()(t))},at={name:"App",components:{Post:R},props:["type","curTab"],data:function(){return{html:"",section:[],curSortTab:"",sortType:"",total:0,nums:[],mergeNums:[],status:{},snapShot:[],timer:"",posTimer:"",speed:1,time:[1600,1100,600],colors:["rgba(255, 255, 255, 0.4)","rgba(255, 128, 255, 0.5)","rgba(204, 85, 119, 0.5)","rgba(243, 112, 24, 0.7)"]}},computed:{duration:function(){return[.5,.4,.3][this.speed]},speedTxt:function(){return["一倍速","二倍速","三倍速"][this.speed]}},watch:{curTab:function(t){t===this.type&&this.init()},curSortTab:function(t,n){t!==n&&this.getSortType()}},created:function(){this.getSection()},methods:{getSection:function(){this.section=(et[this.type]||V.a).trim().split("## ").filter(function(t){return t.length}).map(function(t){var n=t.match(/.+?\r\n/)[0].trim(),e=t.slice(n.length),r=e.split("```")[0],s=e.slice(r.length);return{title:n,desc:r,code:s}}),this.curSortTab=this.section[0].title,this.$nextTick(function(){Z.highlightAll()})},getHtml:function(t){return v()(t,{renderer:nt})},getSortType:function(){var t=this;rt[this.type]&&(this.sortType=rt[this.type].find(function(n){return n.name===t.curSortTab}).sortType,this.init())},init:function(){clearTimeout(this.timer),clearTimeout(this.posTimer),this.timer="",this.posTimer="",this.status={},this.snapShot=[],this.nums=ot(it),this.generateStatus(this.nums,!0),this.curTab===this.type&&(this.sort(),this.getTime())},sort:function(){this[this.sortType]&&this[this.sortType]()},generateStatus:function(t){var n=this,e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=function(){t.forEach(function(t){n.status[t.key]={state:t.state}}),n.status=Object(h["a"])({},n.status)},s=function(){t.forEach(function(t,e){n.status[t.key].pos=36*e}),n.status=Object(h["a"])({},n.status)};r(),e?s():this.posTimer=setTimeout(s,(this.time[this.speed]-this.duration)/2)},getStatus:function(t){var n=this.status[t]||{pos:0,state:0},e=n.pos;return{transform:"translateX(".concat(e,"px)"),color:this.colors[n.state]}},anime:function(){var t=this;if(this.snapShot.length){var n=this.snapShot.shift();this.generateStatus(n),this.timer=setTimeout(function(){t.anime()},this.time[this.speed])}else clearTimeout(this.timer),this.timer=""},toggleAnime:function(){var t=this;if(!this.snapShot.length)return this.init(),void setTimeout(function(){t.anime()},1e3);this.timer?(clearTimeout(this.timer),this.timer=""):this.anime()},switchSpeed:function(){2===this.speed?this.speed=0:this.speed+=1},scrollTo:function(t){var n=document.getElementById(this.curSortTab).getElementsByTagName("pre")[0],e="top"===t?0:n.scrollHeight;n.scrollTo({top:e,behavior:"smooth"})},removeDup:function(t){var n=[],e=[];return t.forEach(function(t){var r=t.map(function(t){return"".concat(t.num,"-").concat(t.state)}).join("");n.includes(r)||(e.push(t),n.push(r))}),e},bubbleSort1:function(){for(var t=this,n=this.nums,e=n.length,r=function(r){for(var s=function(s){if(n[s].num>n[s+1].num){var i=[n[s+1],n[s]];n[s]=i[0],n[s+1]=i[1]}var o=ot(n);o[s].state=1,o[s+1].state=1,o.forEach(function(t,n){r===e-2&&0===s?t.state=2:n>e-1-r&&r>0&&(t.state=2)}),t.snapShot.push(o)},i=0;i<e-1-r;i++)s(i)},s=0;s<e;s++)r(s);this.snapShot=this.removeDup(this.snapShot)},bubbleSort2:function(){var t=this.nums,n=t.length,e=n-1;while(e>0){for(var r=0,s=0;s<e;s++){if(t[s].num>t[s+1].num){r=s;var i=[t[s+1],t[s]];t[s]=i[0],t[s+1]=i[1]}var o=ot(t);o[s].state=1,o[s+1].state=1,o.forEach(function(t,n){n>e&&(t.state=2)}),this.snapShot.push(o)}e=r}var a=ot(t);a.forEach(function(t){return t.state=2}),this.snapShot.push(a),this.snapShot=this.removeDup(this.snapShot)},bubbleSort3:function(){var t,n=this.nums,e=0,r=n.length-1;while(e<r){for(t=e;t<r;++t){if(n[t].num>n[t+1].num){var s=[n[t+1],n[t]];n[t]=s[0],n[t+1]=s[1]}var i=ot(n);i[t].state=1,i[t+1].state=1,i.forEach(function(t,n){(n>r||n<e)&&(t.state=2)}),this.snapShot.push(i)}for(--r,t=r;t>e;--t){if(n[t].num<n[t-1].num){var o=[n[t-1],n[t]];n[t]=o[0],n[t-1]=o[1]}var a=ot(n);a[t].state=1,a[t-1].state=1,a.forEach(function(t,n){(n>r||n<e)&&(t.state=2)}),this.snapShot.push(a)}++e}var u=ot(n);u.forEach(function(t){t.state=2}),this.snapShot.push(u),this.snapShot=this.removeDup(this.snapShot)},selectionSort:function(){for(var t,n=this,e=this.nums,r=e.length,s=0,i=function(i){s=i,t=ot(e),t[s].state=3,t.forEach(function(t,n){n<i&&(t.state=2)}),n.snapShot.push(t);for(var o=i+1;o<r;o++){var a=s;e[s].num>e[o].num&&(s=o),s===o&&(t=ot(e),t[o].state=1,t[a].state=3,t.forEach(function(t,n){n<i&&(t.state=2)}),n.snapShot.push(t)),t=ot(e),t[o].state=1,t[s].state=3,t.forEach(function(t,n){n<i&&(t.state=2)}),n.snapShot.push(t)}var u=[e[s],e[i]];e[i]=u[0],e[s]=u[1],t=ot(e),t[i].state=3,t[s].state=3,t.forEach(function(t,n){n<i&&(t.state=2)}),n.snapShot.push(t)},o=0;o<r-1;o++)i(o);t=ot(e),t.forEach(function(t){t.state=2}),this.snapShot.push(t),this.snapShot=this.removeDup(this.snapShot)},insertionSort1:function(){for(var t,n=this,e=this.nums,r=e.length,s=function(s){var i=e[s],o=s-1;t=ot(e),t.forEach(function(t,n){n<s&&(t.state=2)}),s>1&&(t[s].state=3),n.snapShot.push(t),e[o].num<=i.num&&(t=ot(e),t.forEach(function(t,n){n<s&&(t.state=2)}),t[o+1].state=3,1===s&&n.snapShot.push(ot(t)),t[o].state=1,n.snapShot.push(ot(t)));while(o>=0&&e[o].num>i.num){var a=[e[o+1],e[o]];e[o]=a[0],e[o+1]=a[1],o--,t=ot(e),t.forEach(function(t,n){n<=s&&(t.state=2)}),t[o+1].state=3,o<r-2&&(t[o+2].state=1),n.snapShot.push(t)}var u=[i,e[o+1]];e[o+1]=u[0],i=u[1],o>=0&&(t=ot(e),t.forEach(function(t,n){n<=s&&(t.state=2)}),t[o+1].state=3,t[o].state=1,n.snapShot.push(ot(t))),t=ot(e),t.forEach(function(t,n){n<=s&&(t.state=2)}),n.snapShot.push(t)},i=1;i<r;i++)s(i);t=ot(e),t.forEach(function(t){t.state=2}),this.snapShot.push(ot(t)),this.snapShot=this.removeDup(this.snapShot)},insertionSort2:function(){for(var t,n=this,e=this.nums,r=e.length,s=function(s){var i=e[s],o=0,a=s-1;t=ot(e),t.forEach(function(t,n){n<s&&(t.state=2)}),s>1&&(t[s].state=3),n.snapShot.push(t),e[s-1].num<=i.num&&(t=ot(e),t.forEach(function(t,n){n<s&&(t.state=2)}),t[s].state=3,1===s&&n.snapShot.push(ot(t)),t[s-1].state=1,n.snapShot.push(ot(t)));while(o<=a){var u=~~((o+a)/2);i.num<e[u].num?a=u-1:o=u+1}t=ot(e),t.forEach(function(t,n){n<=s&&(t.state=2)}),t[s].state=3,t[o].state=3,n.snapShot.push(t);for(var c=s-1;c>=o;c--){var l=[e[c+1],e[c]];e[c]=l[0],e[c+1]=l[1],t=ot(e),t.forEach(function(t,n){n<=s&&(t.state=2)}),t[c+1].state=1,c<r-2&&(t[c].state=3),t[o].state=3,n.snapShot.push(t)}var h=[i,e[o]];e[o]=h[0],i=h[1],t=ot(e),t.forEach(function(t,n){n<=s&&(t.state=2)}),n.snapShot.push(t)},i=1;i<r;i++)s(i);t=ot(e),t.forEach(function(t){t.state=2}),this.snapShot.push(ot(t)),this.snapShot=this.removeDup(this.snapShot)},mergeSort:function(t){var n=t.length;if(1===n)return t;var e=Math.floor(n/2),r=t.slice(0,e),s=t.slice(e);r.forEach(function(t){t.state=2}),s.forEach(function(t){t.state=3});var i=ot(this.mergeNums);this.snapShot.push(i),console.log("this.snapShot",i,i.map(function(t){return t.state}),i.map(function(t){return t.num}));var o=this.merge(this.mergeSort(r),this.mergeSort(s));return this.mergeNums=ot(o),this.mergeNums},merge:function(t,n){console.log("letf",t,n);var e=[];while(t.length&&n.length)t[0].num<n[0].num?e.push(t.shift()):e.push(n.shift());return e.concat(t,n)},getTime:function(){if(console.log("getTime",this.sortType),r[this.sortType]&&this.type===this.curTab){for(var t=performance.now(),n=0;n<1e3;n++){var e=[].concat(st);r[this.sortType](e)}var s=performance.now(),i=s-t;this.total=String(i).slice(0,7)}}}},ut=at,ct=(e("680c"),Object(T["a"])(ut,c,l,!1,null,"9b0fe754",null));ct.options.__file="index.vue";var lt=ct.exports,ht=function(){var t=this,n=t.$createElement;t._self._c;return t._m(0)},ft=[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"footer"},[e("span",[t._v("\n    Made with "),e("i",{staticClass:"icon"},[t._v("")]),t._v(" by\n    "),e("a",{attrs:{href:"https://github.com/chanshiyucx/magic-sort",target:"_blank"}},[t._v(" MagicSort")]),t._v(".\n  ")]),e("span",[t._v("\n    Design by "),e("a",{attrs:{href:"https://chanshiyu.com",target:"_blank"}},[e("span",[t._v("蝉時雨")])])])])}],pt={name:"Footer",props:{}},mt=pt,vt=(e("e64c"),Object(T["a"])(mt,ht,ft,!1,null,"01fdb185",null));vt.options.__file="index.vue";var bt=vt.exports,dt={name:"App",components:{Pane:lt,Footer:bt},data:function(){return{tabs:[{label:"冒泡排序",type:"bubble"},{label:"选择排序",type:"selection"},{label:"插入排序",type:"insertion"}],curTab:"bubble"}}},gt=dt,St=(e("f0bf"),Object(T["a"])(gt,a,u,!1,null,"285ba8d4",null));St.options.__file="App.vue";var _t=St.exports;e("dcad"),e("57ca"),e("6423"),e("0368");o["a"].component("Tabs",i["a"]),o["a"].component("TabPane",s["a"]),o["a"].config.productionTip=!1,new o["a"]({render:function(t){return t(_t)}}).$mount("#app")},"57ca":function(t,n,e){},6423:function(t,n,e){},"680c":function(t,n,e){"use strict";var r=e("9fbf"),s=e.n(r);s.a},"9fbf":function(t,n,e){},c36f:function(t,n,e){},e64c:function(t,n,e){"use strict";var r=e("51a4"),s=e.n(r);s.a},f0bf:function(t,n,e){"use strict";var r=e("f62a"),s=e.n(r);s.a},f62a:function(t,n,e){}});
//# sourceMappingURL=app.ca2292cf.js.map